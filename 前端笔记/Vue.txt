一.Vue组件化开发

1.深入理解Vue组件化机制
知识点：
vue组件系统提供了一种抽象，
让我们可以使用独立可复用的组件来构建大型应用，
任意类型的应用界面都可以抽象为一个组件树。
组件化能提高开发效率，方便重复使用，简化调试步骤，提升项目可维护性，便于多人开发。

2.掌握Vue组件化常用技术
a.组件常用的通信方式
props $emit/$on eventBus $refs
vuex (非必须)
$parent $children $root (不推荐) 耦合太高,降低了复用性
provide/inject 跨多层级传值
$attrs/$listeners 包含了父作用域中不作为prop被识别的特性绑定（class和style除外）

注：
(1).事件的派发者和监听者都是组件本身
(2).$children只能获取自定义组件,另外不能保证子元素的顺序

b.插槽
内容分发API，用于复合组件开发。
该技术在通用组件库开发中有大量应用。
匿名插槽，具名插槽，作用域插槽

3.能够设计并实现多种类型的组件
类似elementUI的表单组件, create.js等等

4.加深对一些vue原理的理解
Vue.extend(), mixins

5.学会看开源组件库源码
elementUI

二.Vue全家桶 & 原理
1.vue-router
Vue Router 是 Vue 官方的路由管理器。

需求分析
a.spa点击链接不能刷新页面
  hash #XXX
  history api
b.监听事件
  hashChange 通知router-view更新
  利用数据响应式表示当前url，在router-view的rander函数使用它

思考嵌套路由
树，递归遍历
  标记当前router-view深度

2.vuex
Vuex集中式存储管理应用的所有组件的状态，并以相应的规则保证状态可预测

三.Vue原理 1.0
## 理解Vue的设计思想 Model - View - ViewModel

MVVM框架三要素 数据响应式，模版引擎以及渲染

数据响应式：监听数据并在视图中更新
Object.defineProperty()
Proxy

模版引擎：提供描述视图的模版语法
插值 {{}}
指令 v-bind,v-on,v-model,v-for,v-if

渲染：如何将模版转换为html
模版 => vdom => dom

原理分析
1.new Vue() 首先执行初始化，对data执行响应式处理，这个过程发生在Observer中
2.同时对模版执行编译，找到其中动态绑定的数据，从data中获取并初始化视图，这个过程发生在Compile中
3.同时定义一个更新函数和Watcher，将来对应数据变化时Watcher会调用更新函数
4.由于data的某个key在一个视图中可能出现多次，所以每个key都需要一个管家Dep来管理多个Watcher
5.将来data中数据一旦发生变化，会首先找到对应的Dep，通知所有Watcher执行更新函数

Vue: 框架构造函数
Observer: 执行数据响应式
Compile: 编译模版，初始化视图，收集依赖（更新函数，Watcher创建）
Watcher: 执行更新函数（更新dom）
Dep: 管理多个Watcher，批量更新

编译模版中vue模版特殊语法，初始化视图，更新视图

获取dom--->遍历子元素--->编译文本
                  --->编译节点--->遍历属性--->v-开头--->v-text,v-html,v-model
                                                 --->@开头--->绑定click

依赖收集
视图中会用到data中某key.
同一个key可能出现多次，每次都需要收集出来用一个Watcher来维护它们，此过程为依赖收集。
多个Watcher需要一个Dep来管理，需要更新时由Dep统一通知。

实现思路
1.defineReactive时为每一个key创建一个Dep实例
2.初始化视图时读取某个key，例如:name1，创建一个watcher1
3.由于触发name1的getter方法，便将watcher1添加到name1对应的Dep中
4.当name1更新，setter触发时，便可通过对应的Dep通知其管理所有Watcher更新

总结问题：
Vue1.0
  粒度精细，不需要vdom
  Watcher太多了
  项目太大会把项目撑爆
Vue2.0
  粒度折中，每个组件一个watcher
  组件内部发生变化，如何知道谁变了
  可以重新渲染一次获取最新vdom
  diff 新老vdom之间的变化

实现数组响应式
  找到数组原型
  覆盖那些能够修改数组的更新方法，使其可以通知更新
  将得到的新的原型设置到数组实例原型上

  
